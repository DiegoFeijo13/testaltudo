@model TesteAltudo.Models.PageContentsViewModel

<style>
    img{
        max-height: 100%;
        width: 50%;
        margin: auto;
    }
</style>

@if (!Model.Images.Any())
{
    <div class="text-center">
        <h1 class="display-4"> No images to show</h1>
    </div>
}
else
{
<div>
    <h3 class="display-6">Page images</h3>

    <div id="imgCarousel" class="carousel slide" data-ride="carousel">
        <div class="carousel-indicators">
            @for (int i = 0; i < Model.Images.Count; i++)
            {
                if (i == 0)
                {
                    <button type="button"
                            data-target="#imgCarousel"
                            data-slide-to="@i"
                            class="active"
                            aria-current="true"
                            aria-label="Imagem @(i+1)">
                    </button>

                }
                else
                {
                    <button type="button"
                            data-target="#imgCarousel"
                            data-slide-to="@i"
                            aria-label="Imagem @(i+1)">
                    </button>
                }
            }
        </div>
        <div class="carousel-inner">
            @for (int i = 0; i < Model.Images.Count; i++)
            {
                if (i == 0)
                {
                    <div class="carousel-item active">
                        <img src="@(Model.Images[i])" class="d-block w-100">
                    </div>
                }
                else
                {
                    <div class="carousel-item">
                        <img src="@(Model.Images[i])" class="d-block w-100">
                    </div>
                }
            }
        </div>
        <button class="carousel-control-prev" type="button" href="#imgCarousel" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        </button>
        <button class="carousel-control-next" type="button" href="#imgCarousel" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
        </button>
    </div>
</div>

    <div style="margin-top: 8px;">
        <h3 class="display-6">Most used words</h3>

        <canvas id="wordChart" width="400" max-height="400"></canvas>
    </div>
}


<script>
    $(document).ready(function () {
        loadChart()
    })

    function loadChart() {
        let words = @Html.Raw(Json.Serialize(Model.Words));
        console.log(words);
        let chartlabels = []
        let chartdata = []

        words.forEach(w => {
            chartlabels.push(w.word)
            chartdata.push(w.count)
        });

        console.log(chartlabels)
        console.log(chartdata)

        let wordChart = document.getElementById('wordChart').getContext('2d');
        let chart = new Chart(wordChart, {
            type: 'bar',
            data: {
                labels: chartlabels,
                datasets: [{
                    label: 'usage',
                    data: chartdata,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }
</script>